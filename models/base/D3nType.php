<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3notification\models\base;

use d3system\dictionaries\SysModelsDictionary;
use Yii;

/**
 * This is the base-model class for table "d3n_type".
 *
 * @property integer $id
 * @property integer $sys_model_id
 * @property integer $type_id
 * @property string $label
 *
 * @property \d3yii2\d3notification\models\D3nNotification[] $d3nNotifications
 * @property \d3yii2\d3notification\models\SysModels $sysModel
 * @property string $aliasModel
 */
abstract class D3nType extends \d3system\models\D3ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3n_type';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['sys_model_id', 'type_id'], 'required'],
            'tinyint Unsigned' => [['sys_model_id','type_id'],'integer' ,'min' => 0 ,'max' => 255],
            'smallint Unsigned' => [['id'],'integer' ,'min' => 0 ,'max' => 65535],
            [['label'], 'string', 'max' => 50],
            ['sys_model_id', 'in', 'range' => array_keys(SysModelsDictionary::getClassList())]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3notification', 'ID'),
            'sys_model_id' => Yii::t('d3notification', 'Sys Model ID'),
            'type_id' => Yii::t('d3notification', 'Type ID'),
            'label' => Yii::t('d3notification', 'Label'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3nNotifications()
    {
        return $this->hasMany(\d3yii2\d3notification\models\D3nNotification::className(), ['type_id' => 'id'])->inverseOf('type');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSysModel()
    {
        return $this->hasOne(\d3yii2\d3notification\models\SysModels::className(), ['id' => 'sys_model_id'])->inverseOf('d3nTypes');
    }
}

