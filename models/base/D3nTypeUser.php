<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3notification\models\base;

use Yii;

/**
 * This is the base-model class for table "d3n_type_user".
 *
 * @property integer $user_id
 * @property integer $type_id
 * @property integer $id
 * @property string $alert_type
 *
 * @property \d3yii2\d3notification\models\D3nType $type
 * @property string $aliasModel
 */
abstract class D3nTypeUser extends \d3system\models\D3ActiveRecord
{



    /**
    * ENUM field values
    */
    public const ALERT_TYPE_EMAIL = 'email';
    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3n_type_user';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['user_id', 'type_id'], 'required'],
            'enum-alert_type' => ['alert_type', 'in', 'range' => [
                    self::ALERT_TYPE_EMAIL,
                ]
            ],
            'smallint Unsigned' => [['type_id','id'],'integer' ,'min' => 0 ,'max' => 65535],
            'integer Unsigned' => [['user_id'],'integer' ,'min' => 0 ,'max' => 4294967295],
            [['alert_type'], 'string'],
            [['type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3notification\models\D3nType::className(), 'targetAttribute' => ['type_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'user_id' => Yii::t('d3notification', 'User ID'),
            'type_id' => Yii::t('d3notification', 'Type ID'),
            'id' => Yii::t('d3notification', 'ID'),
            'alert_type' => Yii::t('d3notification', 'Alert Type'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getType()
    {
        return $this->hasOne(\d3yii2\d3notification\models\D3nType::className(), ['id' => 'type_id'])->inverseOf('d3nTypeUsers');
    }




    /**
     * get column alert_type enum value label
     * @param string $value
     * @return string
     */
    public static function getAlertTypeValueLabel(string $value): string
    {
        if (!$value) {
            return '';
        }
        $labels = self::optsAlertType();
        return $labels[$value] ?? $value;
    }

    /**
     * column alert_type ENUM value labels
     * @return string[]
     */
    public static function optsAlertType(): array
    {
        return [
            self::ALERT_TYPE_EMAIL => Yii::t('d3notification', 'email'),
        ];
    }
    /**
    * ENUM field values
    */
    /**
     * @return bool
     */
    public function isAlertTypeEmail(): bool
    {
        return $this->alert_type === self::ALERT_TYPE_EMAIL;
    }

     /**
     * @return void
     */
    public function setAlertTypeEmail(): void
    {
        $this->alert_type = self::ALERT_TYPE_EMAIL;
    }
}
